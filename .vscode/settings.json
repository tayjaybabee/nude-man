{
    "editor.formatOnSave": true,
    "editor.formatOnPaste": true,
    "workbench.colorTheme": "Red",
    "workbench.preferredDarkColorTheme": "Abyss",
    "terminal.integrated.confirmOnExit": true,
    "git.autoStash": true,
    "git-graph.fetchAvatars": true,
    "git-graph.fetchAndPrune": true,
    "git-graph.onlyFollowFirstParent": true,
    "gitProjectManager.storeRepositoriesBetweenSessions": true,
    "gitProjectManager.supportsMercurial": true,
    "python.pythonPath": "/home/taylor/.cache/pypoetry/virtualenvs/nude-man-9KB3xYEO-py3.8/bin/python3",
    "cSpell.words": [
        "a",
        "abc",
        "action",
        "add",
        "api",
        "apng",
        "append",
        "arg",
        "argparse",
        "args",
        "argument",
        "as",
        "author",
        "b",
        "bed",
        "bin",
        "byte",
        "bytes",
        "c",
        "checksum",
        "class",
        "close",
        "codex",
        "coding",
        "conclude",
        "conf",
        "config",
        "considered",
        "continue",
        "convert",
        "created",
        "data",
        "dd",
        "deepai",
        "def",
        "default",
        "depth",
        "detector",
        "dir",
        "directory",
        "docstrings",
        "e",
        "ed",
        "elif",
        "else",
        "enum",
        "env",
        "err",
        "error",
        "expanduser",
        "ext",
        "f",
        "false",
        "file",
        "filepath",
        "files",
        "find",
        "fmt",
        "for",
        "format",
        "formats",
        "found",
        "fp",
        "from",
        "fs",
        "full",
        "gb",
        "get",
        "getcwd",
        "getsize",
        "given",
        "glob",
        "grab",
        "hash",
        "hashlib",
        "headers",
        "help",
        "https",
        "ico",
        "if",
        "image",
        "import",
        "in",
        "indicate",
        "init",
        "inspyre",
        "int",
        "its",
        "join",
        "jpeg",
        "jpg",
        "json",
        "jul",
        "kb",
        "key",
        "keys",
        "leave",
        "len",
        "like",
        "list",
        "lower",
        "main",
        "man",
        "match",
        "mb",
        "md",
        "mon",
        "msg",
        "name",
        "none",
        "not",
        "nsfw",
        "nude",
        "obj",
        "object",
        "on",
        "open",
        "or",
        "org",
        "os",
        "other",
        "out",
        "output",
        "parse",
        "parser",
        "path",
        "pathlib",
        "paths",
        "pic",
        "pictures",
        "pil",
        "png",
        "pop",
        "post",
        "print",
        "processed",
        "processing",
        "program",
        "python",
        "raw",
        "rb",
        "requests",
        "res",
        "results",
        "return",
        "root",
        "round",
        "run",
        "s",
        "scan",
        "score",
        "self",
        "should",
        "size",
        "softworks",
        "source",
        "spinners",
        "split",
        "start",
        "store",
        "str",
        "taylor",
        "the",
        "to",
        "tqdm",
        "trange",
        "true",
        "type",
        "unit",
        "units",
        "usr",
        "usr bin env python coding utf created on mon jul author taylor import requests argparse from glob pathlib path pil image as tqdm os yaspin spinners enum default data dir expanduser inspyre softworks nude man class config object add docstrings def init self file none if not run conf name ext f else full found find pictures depth source root formats ico jpeg jpg png apng webp for fmt in lower size units unit bytes kb mb gb codex b get checksum hashlib md hash convert the to other like or return elif type given getsize scan files list results fp str split pop print arg parser argument s start action store help indicate directory program should its grab paths leave false pic open raw byte fs format obj filepath round append close out msg write conclude main args parse getcwd output len processed trange true res post https api deepai org nsfw detector rb headers key ed a c dd bed e abc json err keys error processing continue score int match join considered",
        "utf",
        "webp",
        "write",
        "yaspin"
    ],
    "python.formatting.provider": "autopep8",
    "python.linting.pylintEnabled": true,
    "python.linting.enabled": true
}